{
  "sensors.continuousServoWritePin13": "Triggers the servo motor in the selected direction and speed (0 to 100%).",
  "sensors.continuousServoWritePin13|param|direction": "turning direction",
  "sensors.continuousServoWritePin13|param|value": "speed value from 0 to 100%, eg: 100",
  "sensors.continuousServoWritePin14": "Triggers the servo motor in the selected direction and speed (0 to 100%).",
  "sensors.continuousServoWritePin14|param|direction": "turning direction",
  "sensors.continuousServoWritePin14|param|value": "speed value from 0 to 100%, eg: 100",
  "sensors.continuousServoWritePin15": "Triggers the servo motor in the selected direction and speed (0 to 100%).",
  "sensors.continuousServoWritePin15|param|direction": "turning direction",
  "sensors.continuousServoWritePin15|param|value": "speed value from 0 to 100%, eg: 100",
  "sensors.create4dDisplay": "Create Grove 4-Digit Display in the selected pins.",
  "sensors.create4dDisplay|param|clkPin": "value of CLK pin number",
  "sensors.create4dDisplay|param|dataPin": "value of data pin number, eg:DigitalPin.P1",
  "sensors.getLedsBrightness": "Gets the brightness value being used in the Neopixel LED strip.",
  "sensors.getLedsBrightness|param|strip": "a NeoPixel strip",
  "sensors.getLightValue": "Gets the light level on the sensor and returns true if it is in the range selected by the user.",
  "sensors.getLightValue|param|pin": "pin to read from (P0/P1/P2)",
  "sensors.getLightValue|param|range": "the selected range (very clear/clear/shadow/dark/very dark)",
  "sensors.getMoistureValue": "Gets the soil moisture value and returns true if it is in the range selected by the user.",
  "sensors.getMoistureValue|param|pin": "pin to read from (P0/P1/P2)",
  "sensors.getMoistureValue|param|range": "the selected range (dry/saturated/wet)",
  "sensors.getPotentiometerValue": "Gets the potentiometer value in angle (between 0 and 300) or number (between 0 and 1023).",
  "sensors.getPotentiometerValue|param|pin": "pin to read from (P0/P1/P2)",
  "sensors.getPotentiometerValue|param|type": "the type that should read (angle/number)",
  "sensors.getTemperatureC": "Gets the temperature in the sensor in degrees Celsius, with optional adjustment to increase accuracy.",
  "sensors.getTemperatureC|param|offset": "the offset in degrees Celsius to adjust the sensor",
  "sensors.getTemperatureC|param|pin": "pin to read from (P0/P1/P2)",
  "sensors.isButtonPressed": "Returns the state of the button, true for pressed and false for not pressed.",
  "sensors.isButtonPressed|param|pin": "pin to read from",
  "sensors.isCrashSensorPressed": "Returns the state of the crash sensor, true for pressed and false for not pressed.",
  "sensors.isCrashSensorPressed|param|pin": "pin to read from",
  "sensors.isLineFollowerOn": "Returns the state of line follower, true for inside the line and false for outside.",
  "sensors.isLineFollowerOn|param|pin": "pin to read from",
  "sensors.isMotionSensorOn": "Returns true if the sensor is triggered.",
  "sensors.isMotionSensorOn|param|pin": "pin to read from",
  "sensors.isTouchSensorOn": "Returns true if the sensor is triggered.",
  "sensors.isTouchSensorOn|param|pin": "pin to read from",
  "sensors.joystickDirection": "Contains the code that will be executed when a joystick position is detected.",
  "sensors.joystickDirection|param|direction": "position of joystick",
  "sensors.joystickDirection|param|handler": "code to run",
  "sensors.joystickDirection|param|pinX": "pin regarding the X axis",
  "sensors.joystickDirection|param|pinY": "pin regarding the Y axis, eg: InitialPins.P1",
  "sensors.measureInCentimeters": "Measure distances in cm.",
  "sensors.measureInCentimeters|param|pin": "signal pin of ultrasonic range module",
  "sensors.onGesture": "Contains the code that will be executed when a gesture is detected.",
  "sensors.onGesture|param|gesture": "type of gesture to detect",
  "sensors.onGesture|param|handler": "code to run",
  "sensors.servoWritePin13": "Rotates the servo motor to the selected angle (between 0 and 180).",
  "sensors.servoWritePin13|param|angle": "angle value",
  "sensors.servoWritePin14": "Rotates the servo motor to the selected angle (between 0 and 180).",
  "sensors.servoWritePin14|param|angle": "angle value",
  "sensors.servoWritePin15": "Rotates the servo motor to the selected angle (between 0 and 180).",
  "sensors.servoWritePin15|param|angle": "angle value",
  "sensors.setBrightness4dDisplay": "Sets the brightness of the 4-digit display to a value between 0 and 7.",
  "sensors.setBrightness4dDisplay|param|level": "value of brightness level",
  "sensors.setBrightness4dDisplay|param|tm1637": "a Grove driver",
  "sensors.setLedsBrightness": "Set the brightness of the Neopixel LED strip to a value between 0 and 50.",
  "sensors.setLedsBrightness|param|brightness": "a measure of LED brightness (0-50), eg: 50",
  "sensors.setLedsBrightness|param|strip": "a NeoPixel strip",
  "sensors.showNumber4dDisplay": "Show a number in the 4-digit display.",
  "sensors.showNumber4dDisplay|param|dispData": "value of number",
  "sensors.showNumber4dDisplay|param|tm1637": "a Grove driver",
  "sensors.soundSensorRange": "Read value of sound sensor and return if it is in the range selected by the user.",
  "sensors.soundSensorRange|param|pin": "pin to read from (P0/P1/P2)",
  "sensors.soundSensorRange|param|range": "the selected range (low/medium/high)",
  "sensors.turnOnOffAudioOutput": "Turn on/off the audio output.",
  "sensors.turnOnOffAudioOutput|param|pin": "pin to read from",
  "sensors.turnOnOffAudioOutput|param|status": "received value (turn on/turn off)",
  "sensors.turnOnOffLed": "Turns a LED on/off.",
  "sensors.turnOnOffLed|param|pin": "pin to read and write on",
  "sensors.turnOnOffLed|param|status": "status of the LED (turn on/turn off)"
}